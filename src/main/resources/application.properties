# Nombre de tu aplicaci\u00f3n Spring Boot
spring.application.name=Avicola Lugo's

---

# --- Configuraci\u00f3n de la base de datos PostgreSQL ---
# FORZAMOS a Spring Boot a usar la variable de entorno DATABASE_URL que Render inyecta.
spring.datasource.url=${DATABASE_URL}
# Especificamos el driver de la base de datos PostgreSQL.
spring.datasource.driver-class-name=org.postgresql.Driver

# Extraer el nombre de usuario y la contrase\u00f1a de la variable de entorno DATABASE_URL (de Render)
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

# Configuraci\u00f3n del pool de conexiones HikariCP (para manejar eficientemente las conexiones a la BD)
spring.datasource.hikari.connection-timeout=480000

---

# --- Configuraci\u00f3n de JPA y Hibernate ---
# **NUEVAS L\u00cdNEAS IMPORTANTES:**
# 1. JPA URL (espec\u00edfica de Jakarta Persistence API, que es la especificaci\u00f3n que usa Hibernate)
jakarta.persistence.jdbc.url=${DATABASE_URL}
# 2. Dialecto de Hibernate (a veces se necesita esta forma m\u00e1s expl\u00edcita para Hibernate 6+)
hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Hibernate usar\u00e1 'update' para ajustar el esquema de la BD a tus entidades (con precauci\u00f3n en producci\u00f3n).
spring.jpa.hibernate.ddl-auto=update
# Muestra las sentencias SQL generadas por Hibernate en los logs (\u00fatil para depuraci\u00f3n).
spring.jpa.show-sql=true
# Formatea el SQL para que sea m\u00e1s legible en los logs.
spring.jpa.properties.hibernate.format_sql=true
# La l\u00ednea original de dialecto de Spring Boot, puedes mantenerla o comentarla,
# la que realmente importa ahora es 'hibernate.dialect' y 'jakarta.persistence.jdbc.url'
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

---

# --- Configuraci\u00f3n del Servidor Web (Puerto) ---
# El puerto para tu aplicaci\u00f3n web. Render inyectar\u00e1 su puerto a trav\u00e9s de la variable de entorno PORT.
# Si la variable PORT no est\u00e1 definida (ej. en desarrollo local), usar\u00e1 8080 por defecto.
server.port=${PORT:8080}

---

# --- Configuraci\u00f3n de Logging (Opcional: para m\u00e1s detalle si algo falla) ---
# logging.level.org.springframework.boot.autoconfigure.jdbc=DEBUG
# logging.level.org.springframework.boot.autoconfigure.orm.jpa=DEBUG
# logging.level.com.avicolalugo=DEBUG